/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The type of phone line.
 */
export const LineType = {
  FixedLine: "FixedLine",
  Mobile: "Mobile",
  TollFree: "TollFree",
  PremiumRate: "PremiumRate",
  SharedCost: "SharedCost",
  Voip: "Voip",
  Pager: "Pager",
  VoiceMail: "VoiceMail",
  UniversalAccess: "UniversalAccess",
  Service: "Service",
  Unknown: "Unknown",
} as const;
/**
 * The type of phone line.
 */
export type LineType = ClosedEnum<typeof LineType>;

export type LookupResponse = {
  /**
   * The carrier of the phone number.
   */
  carrier?: string | undefined;
  /**
   * The ISO 3166-1 alpha-2 country code of the phone number.
   */
  countryCode?: string | undefined;
  /**
   * The type of phone line.
   */
  lineType?: LineType | undefined;
  /**
   * The mobile country code of the phone number.
   */
  mcc?: string | undefined;
  /**
   * The mobile network code of the phone number.
   */
  mnc?: string | undefined;
  /**
   * Whether the phone number has been ported.
   */
  numberPorted?: boolean | undefined;
  /**
   * An E.164 formatted phone number.
   */
  phoneNumber?: string | undefined;
};

/** @internal */
export const LineType$inboundSchema: z.ZodNativeEnum<typeof LineType> = z
  .nativeEnum(LineType);

/** @internal */
export const LineType$outboundSchema: z.ZodNativeEnum<typeof LineType> =
  LineType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LineType$ {
  /** @deprecated use `LineType$inboundSchema` instead. */
  export const inboundSchema = LineType$inboundSchema;
  /** @deprecated use `LineType$outboundSchema` instead. */
  export const outboundSchema = LineType$outboundSchema;
}

/** @internal */
export const LookupResponse$inboundSchema: z.ZodType<
  LookupResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  carrier: z.string().optional(),
  country_code: z.string().optional(),
  line_type: LineType$inboundSchema.optional(),
  mcc: z.string().optional(),
  mnc: z.string().optional(),
  number_ported: z.boolean().optional(),
  phone_number: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "country_code": "countryCode",
    "line_type": "lineType",
    "number_ported": "numberPorted",
    "phone_number": "phoneNumber",
  });
});

/** @internal */
export type LookupResponse$Outbound = {
  carrier?: string | undefined;
  country_code?: string | undefined;
  line_type?: string | undefined;
  mcc?: string | undefined;
  mnc?: string | undefined;
  number_ported?: boolean | undefined;
  phone_number?: string | undefined;
};

/** @internal */
export const LookupResponse$outboundSchema: z.ZodType<
  LookupResponse$Outbound,
  z.ZodTypeDef,
  LookupResponse
> = z.object({
  carrier: z.string().optional(),
  countryCode: z.string().optional(),
  lineType: LineType$outboundSchema.optional(),
  mcc: z.string().optional(),
  mnc: z.string().optional(),
  numberPorted: z.boolean().optional(),
  phoneNumber: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    countryCode: "country_code",
    lineType: "line_type",
    numberPorted: "number_ported",
    phoneNumber: "phone_number",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LookupResponse$ {
  /** @deprecated use `LookupResponse$inboundSchema` instead. */
  export const inboundSchema = LookupResponse$inboundSchema;
  /** @deprecated use `LookupResponse$outboundSchema` instead. */
  export const outboundSchema = LookupResponse$outboundSchema;
  /** @deprecated use `LookupResponse$Outbound` instead. */
  export type Outbound = LookupResponse$Outbound;
}
