/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The status of the authentication. Possible values are:
 *
 * @remarks
 *   * `pending` - The OTP code is being sent.
 *   * `rate_limited` - This user is rate-limited and cannot receive another code.
 *   * `spam_detected` - This attempt is flagged as spam. Go to the dashboard for more details.
 *
 */
export enum Status {
    Pending = "pending",
    RateLimited = "rate_limited",
    SpamDetected = "spam_detected",
}

/**
 * A successful response to an authentication creation request.
 */
export class CreateAuthenticationResponse extends SpeakeasyBase {
    /**
     * A unique identifier for the authentication that you can use on the /check and /retry endpoints.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "authentication_uuid" })
    authenticationUuid?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    /**
     * The time at which the authentication expires and can no longer be checked or retried.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "expires_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    expiresAt?: Date;

    /**
     * The status of the authentication. Possible values are:
     *
     * @remarks
     *   * `pending` - The OTP code is being sent.
     *   * `rate_limited` - This user is rate-limited and cannot receive another code.
     *   * `spam_detected` - This attempt is flagged as spam. Go to the dashboard for more details.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: Status;
}
