/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The status of the authentication.
 */
export enum RetryAuthenticationResponseStatus {
    Approved = "approved",
    Denied = "denied",
    NoAttempt = "no_attempt",
    RateLimited = "rate_limited",
    ExpiredAuth = "expired_auth",
    AlreadyValidated = "already_validated",
}

export class RetryAuthenticationResponse extends SpeakeasyBase {
    /**
     * The UUID of the corresponding authentication.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "authentication_uuid" })
    authenticationUuid?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    /**
     * The time at which the next retry will be available.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "next_retry_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    nextRetryAt?: Date;

    /**
     * The number of retries remaining.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remaining_retry" })
    remainingRetry?: number;

    /**
     * The status of the authentication.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: RetryAuthenticationResponseStatus;
}
